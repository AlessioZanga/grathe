graphs = _{ SOI ~ graph+ ~ EOI }

graph = { strict_attribute ~ graph_type ~ graph_id ~ "{" ~ statements ~ "}" }

strict_attribute = { ^"strict"? }

graph_type = { ^"graph" | ^"digraph" }

graph_id = { ID? }

text = @{ (
    !ASCII_DIGIT ~ ("_" | ASCII_ALPHANUMERIC)+
    | quoted_text
) }

quoted_text = @{ "\"" ~ (!"\"" ~ "\\\""? ~ ANY)* ~ "\"" }

number = @{ "-"? ~ ("." ~ ASCII_DIGIT+ | ASCII_DIGIT+ ~ ("." ~ ASCII_DIGIT*)?) }

ID = _{ number | text }

html = { "<" ~ html_tag+ ~ ">" }

pair = { ID ~ "=" ~ (ID | html) }

statements = { statement* }

statement = _{ (pair | attributes | subgraph | edge | vertex) ~ ";"? }

attributes = { (graph_type | vertex_type | edge_type)? ~ "[" ~ (pair ~ (";" | ",")?)* ~ "]" }

subgraph_type = { ^"subgraph" }

subgraph = { (subgraph_type ~ ID?)? ~ "{" ~ statements? ~ "}" }

vertex_type = { ^"node" }

vertex_id = { ID ~ port? }

port = { (":" ~ ID ~ (":" ~ vertex_direction)? | ":" ~ vertex_direction) }

vertex_direction = { "n" | "ne" | "e" | "se" | "s" | "sw" | "w" | "nw" | "c" | "_" }

vertex = { vertex_id ~ attributes? }

edge_type = { ^"edge" }

edge_id = { (vertex_id | subgraph) ~ (edge_direction ~ (vertex_id | subgraph))+ }

edge_direction = { ("->" | "--") }

edge = { edge_id ~ attributes? }

html_tag = {
    table_tag
    | "<FONT>" ~ (html_text | table_tag) ~ "</FONT>"
    | "<I>" ~ (html_text | table_tag) ~ "</I>"
    | "<B>" ~ (html_text | table_tag) ~ "</B>"
    | "<U>" ~ (html_text | table_tag) ~ "</U>"
    | "<O>" ~ (html_text | table_tag) ~ "</O>"
    | "<SUB>" ~ html_text ~ "</SUB>"
    | "<SUP>" ~ html_text ~ "</SUP>"
    | "<S>" ~ html_text ~ "</S>"
}

html_text = { ("<BR/>" | (!"<" ~ ANY))+ ~ "<BR/>"* }

table_tag = { "<TABLE" ~ (ID ~ "=" ~ quoted_text)* ~ ">" ~ rows ~ "</TABLE>" }

rows = { row ~ ("<HR/>"? ~ row)* }

row = { "<TR>" ~ cells ~ "</TR>" }

cells = { cell ~ ("<VR/>" ~ cell)* }

cell = { ("<TD>" ~ (html_text | html_tag) ~ "</TD>" | "<TD>" ~ "<IMG/>" ~ "</TD>") }

WHITESPACE = _{ (" " | "\t" | NEWLINE) }

COMMENT = _{ ("/*" ~ (!"*/" ~ ANY)* ~ "*/"  | "//" ~ (!"\n" ~ ANY)* | "#" ~ (!"\n" ~ ANY)*) }
