on: [push]

name: build

jobs:
  build:
    name: grathe
    runs-on: '${{ matrix.os }}'
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        env: ["stable", "beta", "nightly"]
    steps:
      - name: Setup Linux
        if: ${{ runner.os == 'Linux' }}
        run: sudo apt-get install -y libopenblas-dev
      - name: Setup MacOS
        if: ${{ runner.os == 'macOS' }}
        run: brew install openblas
      - name: Setup Windows
        if: ${{ runner.os == 'Windows' }}
        run: |
          git clone https://github.com/Microsoft/vcpkg.git
          ./vcpkg/bootstrap-vcpkg.sh
          .\vcpkg install openblas
      - uses: actions/checkout@v2
      - name: Setup Rust
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: ${{ matrix.env }}
          components: rustfmt, clippy
      - name: Cache
        uses: actions/cache@v2
        env:
          cache-name: cache-dependencies
        with:
          path: |
            ~/.cargo
            target
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('Cargo.toml') }}
      - name: Check
        run: cargo check --package grathe
      - name: Build
        run: cargo build
      - name: Test
        run: cargo test
      - name: Coverage
        if: ${{ runner.os == 'Linux' && matrix.env == 'stable' }}
        run: |
          cargo install cargo-tarpaulin
          cargo tarpaulin --out Lcov --exclude-files tests/*
      - name: CodeCov
        if: ${{ runner.os == 'Linux' && matrix.env == 'stable' }}
        uses: codecov/codecov-action@v2
        with:
          files: ./lcov.info
          flags: unittests
          fail_ci_if_error: true
      - name: Publish
        if: ${{ runner.os == 'Linux' && matrix.env == 'stable' && github.ref == 'refs/heads/main' }}
        env:
          TOKEN: ${{ secrets.TOKEN }}
        run: |
          cargo login "$TOKEN"
          cargo publish --allow-dirty
      - name: 'Artifacts'
        uses: actions/upload-artifact@v2
        if: ${{ runner.os == 'Linux' && matrix.env == 'stable' && github.ref == 'refs/heads/main' }}
        with:
          name: ${{ env.PROJECT_NAME_UNDERSCORE }}
          path: target/release/${{ env.PROJECT_NAME_UNDERSCORE }}
